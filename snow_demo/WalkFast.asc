bool noRun = false; //(Defines enabling of double-click running), 
int runVar = 0; //(Double-click function for running), 

void StopWalkFast(this Character*) { //returns to normal walk speed if the player was using our "walk fast" feature

    this.StopMoving(); // required for proper walk speed setup
    this.SetWalkSpeed(5, 5); // set normal walk speed (if returning from run)
  
}


void StartWalkFast(this Character*) { //goes to higher walk speed if the player uses our "walk fast" feature

    player.StopMoving();// required for proper walk speed setup
    player.SetWalkSpeed(9, 9);// set normal run speed (if returning from walk) 
}



static void WalkFast::OnMouseClick_left() {
    player.StopWalkFast();
    
    runVar += 1; // check if Indy is running
    //SetTimer(1,  20); //i've chosen ID1 for our run, 40 = 1 second time for doubleclicking. reset timer with each click, we get the results at repeatedly_execute()
    Timer.Set("timer_walkfast", 20);
    
    // check if it's time to run
    if (runVar == 2){
      player.StartWalkFast();
    } else {
      player.StopWalkFast();
    }
} 


static void WalkFast::ManageTimer() {
  // timer for running double click
  if (noRun == false) {
    //if (IsTimerExpired(1)) { // if you click after 1 second you continue normal walking
    if (Timer.IsExpired("timer_walkfast")) {
      runVar = 0; // otherwise if you click within 1 second runVar stays on 1 so it can become 2 and our Indy's running
    }  
  } else {
    runVar = 0; // reset
    // do nothing, noRun must be true, therefore means double-click running is disabled
  }
}


static void WalkFast::SwitchWalkfastFeature() {
    if (noRun == false) {
      noRun = true;
      Display("Double-Click Run Disabled");
    } else {
      noRun = false;
      Display("Double-Click Run Enabled");
    }
}
