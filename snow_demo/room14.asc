//snow particle system
SnowRainPS_Data ps;


function initParticles() {
  int snowflake_sprite = 408;
  ps.InitParticleSystem(SNOW,   snowflake_sprite, 1,  NONE,  70, 35);
  //ParticleSystemAddRect(170, 175, 315, 235);
  ps.ParticleSystemEnableRegion(1, 50);
  ps.SetParticleSystemIncrements(5, 3);
  ps.enableTransParency = true;
  //ps.collisionDetect = true;

}


function initWeatherModule() 

{
    int snowflake_sprite[3];
    
    snowflake_sprite[0] = 408;
    snowflake_sprite[1] = 409;
    snowflake_sprite[2] = 410;
    
    int nbSnowflakes = 6; //multiply by 3 to get the final number
    
    if (WeatherModule.IsWeatherGoing()) WeatherModule.Stop();
    WeatherModule.Init(nbSnowflakes*3);
    //Display ("Weathermachine says: More Snow");  
    
    int i=0;
    while (i<nbSnowflakes)
    {
      WeatherModule.SetSprite(i*3+0, snowflake_sprite[0]);
      WeatherModule.SetSprite(i*3+1, snowflake_sprite[1]);
      WeatherModule.SetSprite(i*3+2, snowflake_sprite[2]);      
      i++; 
    }
       
    int SPEED = 4;
    
    WeatherModule.Start(SPEED,   -10, false, 2, 2);  
}

function room_Load()
{
  //initParticles();
  initWeatherModule() ;
  
  
  player.Tint(100, 100, 250,  50,  100);
}

function room_FirstLoad()
{

  #ifdef TESTING
  if (CheckPoints.IsJumping()) { //we're in debug and we arrived in this room using the "jump to checkpoint" button
     
    CheckPoints.JumpDone(); //never forget to tell the engine we're done jumping.
                            //we do it immediately in case a cutscene would contain a 'ChangeRoom', thus calling 'isJumping' again
    

    if (CheckPoints.RequestedCheckpoint() == eChckpnt_08_TibetTop) {
      
      
      Mouse.Mode = eModeWalkto;
      GUIlogic.PlayerUI_EnableAndShow();    
    } else {
      
      
    }
  }
  #endif
  
  #ifndef TESTING
  //nothing to do
  #endif
}

int layover_opacity = 100;
bool opacity_increasing = false;

function makeBackgroundSnowFlicker()
{
    int FLICK_SPEED = 15;
    
    if (opacity_increasing) {
      layover_opacity+=FLICK_SPEED;
      if (layover_opacity >=100) {
          opacity_increasing = false;
          layover_opacity = 100;
      }
    }
    else 
    {
      layover_opacity-=FLICK_SPEED;
      if (layover_opacity <=0) {
          opacity_increasing = true;
          layover_opacity = 0;
      }      
    }
    oWindLayover.Transparency = 100-layover_opacity;  
}

function room_RepExec()
{
  makeBackgroundSnowFlicker();
}




function room_Leave()
{
  //ps.ShutdownParticleSystem();
}

function room_AfterFadeIn()
{
  /*
  if((cEgo.PreviousRoom == 2) || (cEgo.PreviousRoom == 3))
  {
    cEgo.Walk(220, 200, eBlock);
    cEgo.FaceLocation(cEgo.x, Room.Height, eBlock);
  }
  else
  {
    cEgo.Say("width: %d, height: %d",Room.Width, Room.Height);
    cEgo.Say("Its snowing...");
    ps.SetParticleSystemData(NO_CHANGE_PARTICLE, NONE);
    cEgo.Say("Looks like the wind's died down now.");
    ps.SetParticleSystemData(SNOW, LEFT_TO_RIGHT_DIAGONAL);
    ps.SetParticleSystemIncrements(4, 2, 5);
    cEgo.Say("I think I said it a moment too soon...");
    ps.SetParticleSystemOverlayPercent();
    //Wait(200);
    //ps.SetParticleSystemData(NO_CHANGE_PARTICLE, RIGHT_TO_LEFT_DIAGONAL);
  }
  */
}


function repeatedly_execute_always()
{
  //ps.RenderParticles();
}



