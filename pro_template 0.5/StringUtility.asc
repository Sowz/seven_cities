

String Before(this String*,  int position)
{
  String s = this.Truncate(position);
  if (s==null) s="";  
  return s;
}

String After(this String*,  int position)
{
  String s = this.Substring(position,  this.Length);
  if (s==null) s="";  
  return s;
}



String RemoveCharAt(this String*,  int at)
{
  //Display(String.Format("at=%d, len=%d",at,  this.Length)); //DEBUG
  
  if (at>=0 && at<this.Length)
  {
    String before = this.Truncate(at);
    return before.Append(this.After(at+1));
  }
  return this; //Safety
}




void RenderStringReal(this Label*,  String str)
{
  
  String real="";
  int i=0;
  while (i<str.Length)
  {
    char c = str.Chars[i];
    //if (str.Chars[i]==eKeyBackSlash) // backslash
    //  real=real.AppendChar(eKeyBackSlash); //just a single backslash
    if (c==eKeyOpenBracket) // [
      real=real.Append("B ");
    else if (c==eKeyBackSlash)
      real=real.Append("\\ ");
    else if (c==eKeySpace)
      real=real.Append("_ ");    
    else
      real=real.Append(String.Format("%c ",c));
    i++;
  }
  
  this.Text = real;
  //Display(real);
}



void RenderStringAscii(this Label*,  String str)
{
  String real="";
  int i=0;
  while (i<str.Length)
  {
    char c = str.Chars[i];
    real=real.Append(String.Format("%d-",c));
    
    i++;
  }
  this.Text = real;
  Display(real);
}

