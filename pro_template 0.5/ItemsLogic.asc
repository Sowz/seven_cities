


 
   
static void ItemsLogic::OilCan() {
  
  // IMPORTANT: We don't use the mode passed in parameter
  // because it might be a "fake" mode (e.g. pickup) that
  // we have used to force the call to "_otherclick".
  //   Instead, the "real" mode must always be retrieved
  // using this function. Note: The "real" mode is set in
  // Items_OnRightClick and Items_OnLeftClick.
  CursorMode mode = ActionsLogic.ItemClick_GetRealMode();  
  
  if (mode == eModeOpen) {  
    cIndy.Say("I'd rather not, I might spill the oil.");
  } else if (mode == eModeClose) {  
    cIndy.Say("It's already properly closed.");
  } else if (mode == eModeLookat) {  
    cIndy.Say("It's an oil can I took from the janitor's closet.");  
  } else if (mode == eModeUseinv) {  
      
      if (GetUseItem() == iKey.ID) {
        cIndy.Say("Why would my cabinet key open this oil can?");
      } else if (GetUseItem() == iWallet.ID) {
        cIndy.Say("...And risk having my papers ruined?");
      // everything else
      } else {
        WontWork();
      }  
  }else {
    WontWork();
  }
}




static void ItemsLogic::OfficeKey() {
  
  // IMPORTANT: We don't use the mode passed in parameter
  // because it might be a "fake" mode (e.g. pickup) that
  // we have used to force the call to "_otherclick".
  //   Instead, the "real" mode must always be retrieved
  // using this function. Note: The "real" mode is set in
  // Items_OnRightClick and Items_OnLeftClick.
  CursorMode mode = ActionsLogic.ItemClick_GetRealMode();  
  
  if (mode == eModeLookat) {  
    cIndy.Say("It's the key to my office cabinet."); 
  } else if (mode == eModeUseinv) {  
      
       // Oil Can
      if (GetUseItem() == iOilCan.ID) {
        cIndy.Say("...And have the key all slimy? No, thanks!");
      // everything else
      } else {
        WontWork();
      }
  } else {
    WontWork();
  }
}

function read_Telegram_Cutscene() {
    cIndy.Say("Let's take a look at that telegram.");
    prevX = player.x;
    prevY = player.y;
    gIconbar.Visible = false;
    gInventory.Visible = false;
    gStatusline.Visible = false;
    player.ChangeRoom(7, 1, 1);
}

static void ItemsLogic::Telegram() {


  // IMPORTANT: We don't use the mode passed in parameter
  // because it might be a "fake" mode (e.g. pickup) that
  // we have used to force the call to "_otherclick".
  //   Instead, the "real" mode must always be retrieved
  // using this function. Note: The "real" mode is set in
  // Items_OnRightClick and Items_OnLeftClick.
  CursorMode mode = ActionsLogic.ItemClick_GetRealMode();  
  
  
  if (mode == eModeOpen) {  
    cIndy.Say("There's no envelope. Nothing to open.");
  } else if (   mode == eModeInteract
             || mode == eModeLookat) { 

    //CheckPoints.Barnett_Read_Telegram_Cutscene();
    read_Telegram_Cutscene();
 
  } else if (mode == eModeUseinv) {  
      
    if (GetUseItem() == iOilCan.ID) {
      cIndy.Say("No way, that would ruin the telegram.");
    } else {
      WontWork();
    }
  } else {
    WontWork();
  }
}

static void ItemsLogic::Wallet() {
  


  // IMPORTANT: We don't use the mode passed in parameter
  // because it might be a "fake" mode (e.g. pickup) that
  // we have used to force the call to "_otherclick".
  //   Instead, the "real" mode must always be retrieved
  // using this function. Note: The "real" mode is set in
  // Items_OnRightClick and Items_OnLeftClick.
  CursorMode mode = ActionsLogic.ItemClick_GetRealMode();  

  //Display(String.Format("RunInteraction RECEIVED. mode=%d", mode)); //DEBUG


  if        (mode == eModeLookat) {
    cIndy.Say("That's my wallet.");
  } else if (mode == eModeOpen || mode==eModeInteract) {  
    cIndy.Say("There's nothing of interest in it.");
  } else if (mode == eModeUseinv) {  
      
      if (GetUseItem() == iOilCan.ID) {
        cIndy.Say("Why would I spill oil all over my papers?");
      } else {
        WontWork();
      }
   
  } else {
    WontWork();
  }
  
}


function DescribeCompass() {
    cIndy.Say("Apparently it's some sophisticated metal compass.");
    cIndy.Say("It's from the the early Ottoman Empire, at the end of the middle ages.");
    cIndy.Say("It was used by muslim artists and decorators.");
    cIndy.Say("They were ornamenting everything with geometric shapes in that era.");
    cIndy.Say("That device helped designing them.");
}

function Combine_Compass_CompassNote() {
    cIndy.Say("Yes, that's defnitely the artifact the tag is about.");
    DescribeCompass();
}



static void ItemsLogic::Compass() {
  
  CursorMode mode = ActionsLogic.ItemClick_GetRealMode();  


  if        (mode == eModeLookat) {
    if (!DialogsLogic.GetVar(eDialog_LookedAtCompassTag)) {
      cIndy.Say("It's a strange metal artifact. I can't date it, and I don't know what it's for.");
    } else {
      cIndy.Say("Thanks to the tag, I know what this artifact is.");      
      DescribeCompass(); //the rest of the description ,shared with the "lookat" action on the compass note/tag     
    }
    
  } else if (mode == eModeOpen || mode==eModeInteract) {  
    cIndy.Say("There's no point in disassembling it.");
  } else if (mode == eModeUseinv) {  
      
      if (GetUseItem() == iCompassNote.ID) {
        Combine_Compass_CompassNote();
      } else {
        WontWork();
      }
   
  } else {
    WontWork();
  }
  
}



static void ItemsLogic::CompassNote() {
  
  CursorMode mode = ActionsLogic.ItemClick_GetRealMode();  


  if        (mode == eModeLookat) {
    if (inventory[iCompass.ID])//indy has the compass
    {
    if (!DialogsLogic.GetVar(eDialog_LookedAtCompassTag)) {
      cIndy.Say("Hey! It's the description tag of that ancient metal device.");
      cIndy.Say("Irene probably left the tag in my drawer to make sure it wouldn't be lost.");
      DialogsLogic.SetVar(eDialog_LookedAtCompassTag,  1);
    }
    cIndy.Say("It's one of those tags we use to classify our artifacts.");
    cIndy.Say("Here is what it says:");
    DescribeCompass(); //the rest of the description ,shared with the "lookat" action on the compass
    }
    else //indy doesn't have the compass
    {
      player.Say("It's the description tag of one of the many artifacts we have in Barnett college.");
      player.Say("I don't know what artifact it describes.");
      
    }
  } else if (mode == eModeOpen || mode==eModeInteract) {  
    cIndy.Say("There's nothing of interest in it.");
  } else if (mode == eModeUseinv) {  
      
      if (GetUseItem() == iCompass.ID) {
        Combine_Compass_CompassNote();
      } else {
        WontWork();
      }
   
  } else {
    WontWork();
  }
  
}





static void ItemsLogic::Hammer1() {
  


  // IMPORTANT: We don't use the mode passed in parameter
  // because it might be a "fake" mode (e.g. pickup) that
  // we have used to force the call to "_otherclick".
  //   Instead, the "real" mode must always be retrieved
  // using this function. Note: The "real" mode is set in
  // Items_OnRightClick and Items_OnLeftClick.
  CursorMode mode = ActionsLogic.ItemClick_GetRealMode();  

  //Display(String.Format("RunInteraction RECEIVED. mode=%d", mode)); //DEBUG


  if        (mode == eModeLookat) {
    if (DialogsLogic.GetVar(eDialog_IndyConfusedHammers))
      player.Say("It's a ceremonial hammer... But I don't know if it's a copy.");
    else
      player.Say("It's a ceremonial hammer. That's the real one.");
  } else if (mode == eModeOpen || mode==eModeInteract) {  
    player.Say("I'm not waving that around.");
  } else if (mode == eModeUseinv) {  
      /*
      if (GetUseItem() == iOilCan.ID) {
        player.Say("Why would I spill oil all over my papers?");
      } else {
        WontWork();
      }
      */
      WontWork();
   
  } else {
    WontWork();
  }
  
}


static void ItemsLogic::Hammer2() {
  


  // IMPORTANT: We don't use the mode passed in parameter
  // because it might be a "fake" mode (e.g. pickup) that
  // we have used to force the call to "_otherclick".
  //   Instead, the "real" mode must always be retrieved
  // using this function. Note: The "real" mode is set in
  // Items_OnRightClick and Items_OnLeftClick.
  CursorMode mode = ActionsLogic.ItemClick_GetRealMode();  

  //Display(String.Format("RunInteraction RECEIVED. mode=%d", mode)); //DEBUG


  if        (mode == eModeLookat) {
    if (DialogsLogic.GetVar(eDialog_IndyConfusedHammers))
      player.Say("It's a ceremonial hammer... But I don't know if it's a copy.");
    else
      player.Say("I looks really very much like the real one.");
  } else if (mode == eModeOpen || mode==eModeInteract) {  
    player.Say("I'm not waving that around.");
  } else if (mode == eModeUseinv) {  
      /*
      if (GetUseItem() == iOilCan.ID) {
        player.Say("Why would I spill oil all over my papers?");
      } else {
        WontWork();
      }
      */
      WontWork();
   
  } else {
    WontWork();
  }
  
}

